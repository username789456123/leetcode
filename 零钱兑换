int min_fun(int a, int b)
{
    int c = a<b?a:b;
    return c;
}

int coinChange(int* coins, int coinsSize, int amount)
{
    //1、确定状态
    int f[amount+1];
    //初始化
     f[0] = 0;
    
    //计算顺序 从小到大 i表示需要凑的总数
    for(int i = 1;i<=amount;i++)
    {
        f[i] = INT_MAX;
        for(int j = 0;j<coinsSize;j++)
        {
            //3.边界情况 f[i-coins[j]]!=INT_MAX 表示凑不出硬币时，而且INT_MAX相加可能还会溢出
            if(i>=coins[j] && f[i-coins[j]]!=INT_MAX)
            {
                //2、转移方程
                f[i] = min_fun(f[i],f[i-coins[j]]+1);
            }
        }
    }
    //当凑不出时，f[amount]仍然为INT_MAX，我们需要赋值为-1，最后返回f[amount]
    if(f[amount] == INT_MAX)
        f[amount] = -1;

        return f[amount];

}
