typedef struct {
    int n;
    sem_t foo;
    sem_t bar;
} FooBar;

FooBar* fooBarCreate(int n) {
    FooBar* obj = (FooBar*) malloc(sizeof(FooBar));
    obj->n = n;
    sem_init(&(obj->foo),0,0);
    sem_init(&(obj->bar),0,1);
    //obj->n = n;
    return obj;
}

void foo(FooBar* obj) {
    
    for (int i = 0; i < obj->n; i++) {
        
        // printFoo() outputs "foo". Do not change or remove this line.
        sem_wait(&(obj->bar));
        printFoo();
        sem_post(&(obj->foo));
    }
}

void bar(FooBar* obj) {
    
    for (int i = 0; i < obj->n; i++) {
        
        // printBar() outputs "bar". Do not change or remove this line.
        sem_wait(&(obj->foo));
        printBar();
        sem_post(&(obj->bar));
    }
}

void fooBarFree(FooBar* obj) {
    sem_destroy(&(obj->bar));
    sem_destroy(&(obj->foo));
    free(obj);
}
