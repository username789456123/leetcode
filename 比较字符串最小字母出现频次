int cmp(int*a,int*b)
{
    return *a-*b;
}
int f(char*words)
{
    int len=strlen(words);
    int ascll[26]={0};
    for(int i=0;i<len;i++)
    {
        ascll[words[i]-'a']++;
    }
    for(int i=0;i<26;i++)
    {
        if(ascll[i]!=0)
        {
            return ascll[i];
        }
    }
    return 0;
}
int* numSmallerByFrequency(char ** queries, int queriesSize, char ** words, int wordsSize, int* returnSize)
{
    *returnSize=queriesSize;
    int*ret=(int*)malloc(sizeof(int)*queriesSize);
    int*nubmer2=(int*)malloc(sizeof(int)*wordsSize);
    for(int i=0;i<wordsSize;i++)
    {
        nubmer2[i]=f(words[i]);
    }
    qsort(nubmer2,wordsSize,sizeof(int),cmp);
    for(int i=0;i<queriesSize;i++)
    {
        int max=0;
        int W=f(queries[i]);
        for(int j=wordsSize-1;j>=0;j--)
        {
            if(nubmer2[j]>W)
            {
                max++;
            }
            else
            {
                break;
            }
        }
        ret[i]=max;
    }
    return ret;
}
