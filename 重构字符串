char * reorganizeString(char * s){
    int len = strlen(s);
    int hash[26];
    int idx = 0;
    memset(hash, 0, sizeof(hash));
    for(int i = 0; i < len; ++i) {
       ++hash[s[i]-'a'];
    }
    for(int i = 0; i < len; ++i) {
        int countmax = 0;
        int cc = 0;
        int j;
        for(j = 0; j < 26; ++j) {
            if(cc < hash[j]) {
                cc = hash[j];
                countmax = j;
            }
        }
        // printf("%d\n", hash[countmax]);
        for(int st = 0; st < hash[countmax]; ++st) {
            s[idx++] = countmax + 'a';
        }
        hash[countmax] = 0;
    }
    int count = len / 2;
    char* ans = (char*)malloc(sizeof(char)*len+1);
    idx = 0;
    if(len & 1) {
        if(s[0] == s[count + 1]) return "";
    }
    else {
        if(s[0] == s[count]) return "";
    }
    for(int i = 0; i < len; i += 2) {
            ans[i] = s[idx++];
    }
    for(int i = 1; i < len; i += 2) {
            ans[i] = s[idx++];
    }
    ans[idx] = '\0';
    return ans;
}
