int* nextGreaterElement(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize)
{
    //单调栈
    int  stackDat[nums2Size];
    int     stackTop = 0;


    int     hashSet[100001] = {0};    //表示在num1中是否出现过
    for(int i = 0; i < nums1Size; i++ )
    {
        hashSet[nums1[i]] = i + 1;
    }


    *returnSize = nums1Size;
    int* returnNums = (int* )malloc(sizeof(int) * nums1Size);
    for(int i = 0; i < nums2Size; i++ )
    {
        //单调递减队列
        while(stackTop  && ( nums2[i] > stackDat[stackTop-1]) )
        {
            int hashIndex = hashSet[ stackDat[stackTop-1] ];
            if(hashIndex != 0)
            {
                returnNums[hashIndex-1] = nums2[i];
            }
           stackTop--;
        } 
        stackDat[stackTop++] = nums2[i];
    }
    
    while(stackTop)
    {
        int hashIndex = hashSet[ stackDat[stackTop-1] ];
        if(hashIndex != 0)
        {
            returnNums[hashIndex-1] = -1;
        }
        stackTop--;
    }
    return returnNums;
}
