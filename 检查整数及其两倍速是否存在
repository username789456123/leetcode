int cmp(const void*a, const void* b)
{
    return *(int*)a > *(int*)b;
}

bool Binary_search(int* arr, int arrSize, int k) //标准二分查找
{
    int left = 0;
    int right = arrSize - 1;
    while(left <= right)
    {
        int mid = left + right >> 1;
        if(arr[mid] < k)
            left = mid + 1;
        else if(arr[mid] > k)
            right = mid - 1;
        else
            return true;
    }
    return false;
}

bool checkIfExist(int* arr, int arrSize)
{
    qsort(arr, arrSize, sizeof(int), cmp);
    int cnt_0 = 0; //对0要单独处理，防止只有一个0而返回true的情况
    for(int i = 0; i < arrSize; i++)
    {
        if(arr[i])
        {
            if(Binary_search(arr, arrSize, 2 * arr[i]))
                return true;
        }
        else
            cnt_0++;
    }
    if(cnt_0 > 1)
        return true;
    return false;
}
