int lengthOfLongestSubstring(char * s){
    int sLen = strlen(s); //获取字符串长度
    int left=0, right = 0; //左右指针
    int res=0, cnt=0; //结果和计数
    int tmp[128] = {0}; //以128位数组记录字串中的字符是否已经出现
    
    while(right < sLen) {           //循环条件为右指针小于字符串长度
        if(0 == tmp[ s[right] ]) {  //当右指针指向的字符没出现在子串中时
            tmp[ s[right] ]=1;       //使用tmp数组记录右指针指向的字符在ascii码中对应的位置
            right++;                     //右指针右移
            cnt++;                       //计数加1
            res = res > cnt ? res : cnt;   //记录结果
        }
        else {                            //当右指针指向的字符出现在子串中时
            tmp[ s[left] ] = 0;     //左指针指向字符的ascii码不再出现在tmp数组中
            left++;                    //左指针右移
            cnt--;                      //计数减1
        }
    }
    return res;          //返回最终无重复字串长度
}
