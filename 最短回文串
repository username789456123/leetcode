char* shortestPalindrome(char* s) {
    int n = strlen(s);
    int base = 131, mod = 1000000007;
    int left = 0, right = 0, mul = 1;
    int best = -1;
    for (int i = 0; i < n; ++i) {
        left = ((long long)left * base + s[i]) % mod;
        right = (right + (long long)mul * s[i]) % mod;
        if (left == right) {
            best = i;
        }
        mul = (long long)mul * base % mod;
    }
    int ret_len = n - best - 1;
    char* ret = malloc(sizeof(char) * (ret_len + n + 1));
    for (int i = 0; i < ret_len; i++) ret[i] = s[n - i - 1];
    for (int i = 0; i < n; i++) ret[i + ret_len] = s[i];
    ret[ret_len + n] = 0;
    return ret;
}
