struct TreeNode* buildTree(int* inorder, int inorderSize, int* postorder, int postorderSize) {
    if (inorderSize < 1)
        return NULL;
    int size = inorderSize; 
    int tmp = postorder[postorderSize - 1];
    int i;
    for (i = 0; i < inorderSize; i++)
    {
        if (inorder[i] == tmp)
            break;
    }
    int left_size = i; int right_size = size - i - 1;       
    int* left_in = inorder; int* right_in = inorder + i + 1;  
    int* left_post = postorder; int* right_post = postorder + i;
    struct TreeNode* T = (struct TreeNode*)malloc(sizeof(struct TreeNode));
    T->val = tmp;
    T->left = buildTree(left_in, left_size, left_post, left_size);
    T->right = buildTree(right_in, right_size, right_post, right_size);
    return T;
}
