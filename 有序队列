static inline int cmp(const void *pa, const void *pb) {
    return *(char *)pa - *(char *)pb;
}

char * orderlyQueue(char * s, int k) {
    int n = strlen(s);
    if (k == 1) {
        char *smallest = (char *)malloc(sizeof(char) * (n + 1));
        strcpy(smallest, s);
        for (int i = 1; i < n; i++) {
            char c = s[0];
            for (int j = 0; j < n - 1; j++) {
                s[j] = s[j + 1];
            }
            s[n - 1] = c;
            if (strcmp(s, smallest) < 0) {
                strcpy(smallest, s);
            }
        }
        return smallest;
    } else {
        qsort(s, n, sizeof(char), cmp);
        return s;
    }
}
