#define MAX_NUM 1001
int dp[MAX_NUM];
#define max(a, b) ((a) > (b) ? (a) : (b))

void dfs(int *arr, int idx, int arrSize, int d)
{
    int i;
    if (dp[idx] != -1)
        return;
    dp[idx] = 1;
    for (i = idx - 1; i >= 0 && (idx - i) <= d && arr[idx] > arr[i]; i--){
        dfs(arr, i, arrSize, d);
        dp[idx] = max(dp[idx], dp[i] + 1);
    }
    for (i = idx + 1; i < arrSize && (i - idx) <= d && arr[idx] > arr[i]; i++){
        dfs(arr, i, arrSize, d);
        dp[idx] = max(dp[idx], dp[i] + 1);
    }
}
int maxJumps(int* arr, int arrSize, int d){
    int i;
    int res = INT_MIN;

    for (i = 0; i < MAX_NUM; i++) {
        dp[i] = -1;
    }
    //printf("arr:%d, d:%d\n", arrSize, d);
    for (i = 0; i < arrSize; i++) {
        dfs(arr, i, arrSize, d);
    }

    for (i = 0; i < arrSize; i++) {
        //printf("max:%d, dp[%d]:%d\n", res, i, dp[i]);
        res = max(res, dp[i]);
    }
    return res;
}
