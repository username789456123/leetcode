struct PeekingIterator {
    int next;
    bool hasPeeked;
    struct Iterator* iterator;
};

struct PeekingIterator* Constructor(struct Iterator* iter) {
    struct PeekingIterator* piter = malloc(sizeof(struct PeekingIterator));
    piter->iterator = iter;
    piter->hasPeeked = false;
    return piter;
}

int peek(struct PeekingIterator* obj) {
    if (obj->hasPeeked) return obj->next;
    obj->hasPeeked = true;
    obj->next = obj->iterator->next();
    return obj->next;
}

int next(struct PeekingIterator* obj) {
    if (obj->hasPeeked)
    {
        obj->hasPeeked = false;
        return obj->next;
    }
    return obj->iterator->next();
}

bool hasNext(struct PeekingIterator* obj) {
    if (obj->hasPeeked) return true;
    return obj->iterator->hasNext();
}
