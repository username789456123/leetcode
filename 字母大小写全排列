char ** letterCasePermutation(char * s, int* returnSize){
    /*创建长度，开辟ret空间*/
    int len = strlen(s);
    char **ret = malloc(sizeof(char *)* pow(2,len));
    ret[0] = malloc(sizeof(char) * len + 1);
    /*将s复制进去，第一个肯定为答案*/
    strcpy(ret[0],s);
    int i,j,k;
    int size = 1;
    for(i = 0;i < len;i++){
        k = size;
        /*如果是字母的话*/
        if(isalpha(s[i])){
            /*k为行数，j用来控制移动到下行*/
            for(j = 0;j < k;j++){
                ret[k + j] = malloc(sizeof(char) * (len+1));
                /*基于j - j+k行，每次只改变一个字符*/
                strcpy(ret[j + k],ret[j]);  
                /*如果是小写，转换大写，反之小写*/
                ret[k + j][i] = (isupper(s[i]) != 0) ? s[i] + 32 : s[i] - 32;
                size++;
            }
        }
    }
    *returnSize = size;
    return ret;
}
