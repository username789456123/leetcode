/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
  int cmp(int* a,int* b){
     return *a - *b;
 }
int* intersect(int* nums1, int nums1Size, int* nums2, int nums2Size, int* returnSize){
int num=fmax(nums1Size,nums2Size);
int* a=malloc(sizeof(int)*num);
qsort(nums1,nums1Size,sizeof(int),cmp);
qsort(nums2,nums2Size,sizeof(int),cmp);
*returnSize=0;
int i=0,j=0;
while(i<nums1Size&&j<nums2Size){
    if(nums1[i]==nums2[j]){
        a[(*returnSize)++]=nums1[i];i++;j++;continue;
    }
    if(nums1[i]<nums2[j]){
        i++;continue;
    }
     if(nums1[i]>nums2[j])j++;
}
return a;
}
