int knightDialer(int n){
    if (n == 1) {
        return 10;
    }

    int m[10][4] = {{4, 6, -1, -1}, {6, 8, -1, -1}, {7, 9, -1, -1}, {4, 8, -1, -1}, {0, 3, 9, -1},
        {-1, -1, -1, -1}, {0, 1, 7, -1}, {2, 6, -1, -1}, {1, 3, -1, -1}, {2, 4, -1, -1}};

    int n1[10] = {1, 1, 1, 1, 1, 1, 1, 1, 1, 1};
    int n2[10];
    int *pre = n1, *cur = n2;
    for (int k = 1; k < n; k++){
        memset(cur, 0, sizeof(n1));
        for (int i = 0; i < 10; i++) {
            if (pre[i] == 0) {
                continue;
            }
            for (int j = 0; j < 4; j++) {
                if (m[i][j] == -1) {
                    break;
                }
                cur[m[i][j]] = (cur[m[i][j]] + pre[i]) % 1000000007;
            }
        }
        int *t = pre;
        pre = cur, cur = t;
    }
    
    int cnt = 0;
    for (int i = 0; i < 10; i++) {
        cnt = (cnt + pre[i]) % 1000000007;
    }
    return cnt;
}
