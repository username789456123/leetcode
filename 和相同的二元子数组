struct HashTable {
    int key, val;
    UT_hash_handle hh;
};

int numSubarraysWithSum(int* nums, int numsSize, int goal) {
    int sum = 0;
    struct HashTable* cnt = NULL;
    int ret = 0;
    for (int i = 0; i < numsSize; i++) {
        struct HashTable* tmp;
        HASH_FIND_INT(cnt, &sum, tmp);
        if (tmp == NULL) {
            tmp = malloc(sizeof(struct HashTable));
            tmp->key = sum, tmp->val = 1;
            HASH_ADD_INT(cnt, key, tmp);
        } else {
            tmp->val++;
        }
        sum += nums[i];
        int target = sum - goal;
        HASH_FIND_INT(cnt, &target, tmp);
        if (tmp != NULL) {
            ret += tmp->val;
        }
    }
    return ret;
}
