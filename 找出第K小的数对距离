int cmp(const void* pa, const void* pb) {
    return *(int *)pa - *(int *)pb;
}

int binarySearch(int* nums, int end, int target) {
    int left = 0, right = end - 1;
    while (left <= right) {
        int mid = (left + right) / 2;
        if (nums[mid] < target) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    return left;
}

int smallestDistancePair(int* nums, int numsSize, int k) {
    qsort(nums, numsSize, sizeof(int), cmp);
    int left = 0, right = nums[numsSize - 1] - nums[0];
    while (left <= right) {
        int mid = (left + right) / 2;
        int cnt = 0;
        for (int j = 0; j < numsSize; j++) {
            int i = binarySearch(nums, j, nums[j] - mid);
            cnt += j - i;
        }
        if (cnt >= k) {
            right = mid - 1;
        } else {
            left = mid + 1;
        }
    }
    return left;
}
